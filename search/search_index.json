{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to selfhosters.net","text":"<p>Selfhosters.net is a documentation portal for the Unraid Discord.</p> <p>Here you will find short guides and walkthroughs made by the Unraid community.</p> <p> </p> <p>The README has a short guide on how to get started contributing</p>"},{"location":"commands/","title":"Nice-to-know Unraid commands","text":""},{"location":"commands/#docker-service","title":"Docker service","text":"<pre><code>/etc/rc.d/rc.docker &lt;command&gt;\n</code></pre> <p>Available commands: start stop restart status</p>"},{"location":"commands/#docker-containers","title":"Docker containers","text":"<pre><code>docker &lt;command&gt; &lt;containername&gt;\n</code></pre> <p>Available commands: start stop restart pause logs</p> <p>Print all container names:</p> <pre><code>docker ps --format \u2018{{.Names}}\u2019\n</code></pre> <p>Print all container images:</p> <pre><code>docker ps --format \u2018{{.Image}}\u2019\n</code></pre>"},{"location":"commands/#nginx","title":"Nginx","text":"<pre><code>/etc/rc.d/rc.nginx &lt;command&gt;\n</code></pre> <p>Available commands: start stop restart status</p>"},{"location":"commands/#php","title":"PHP","text":"<pre><code>/etc/rc.d/rc.php-fpm &lt;command&gt;\n</code></pre> <p>Available commands: start stop restart status</p>"},{"location":"commands/#vm-service","title":"VM Service","text":"<pre><code>/etc/rc.d/rc.libvirt &lt;command&gt;\n</code></pre> <p>Available commands: start stop</p> <p>List all domains:</p> <pre><code>virsh list --all\n</code></pre>"},{"location":"commands/#domains","title":"Domains","text":"<pre><code>virsh &lt;command&gt; &lt;domain&gt;\n</code></pre> <p>Available commands: start shutdown reboot suspend</p>"},{"location":"commands/#samba","title":"Samba","text":"<pre><code>/etc/rc.d/rc.samba &lt;command&gt;\n</code></pre> <p>Available commands: start stop</p>"},{"location":"commands/#unraid","title":"Unraid","text":""},{"location":"commands/#shutdownreboot","title":"Shutdown/Reboot","text":"<pre><code>/sbin/&lt;command&gt;\n</code></pre> <p>Available commands: reboot poweroff shutdown</p> <p>Note</p> <p><code>poweroff</code> If you get an unclean shutdown when issuing this command you need to adjust your timeout settings, see https://forums.unraid.net/topic/69868-dealing-with-unclean-shutdowns</p>"},{"location":"commands/#run-diagnostics","title":"Run diagnostics","text":"<pre><code>diagnostics\n</code></pre>"},{"location":"commands/#tail-the-syslog","title":"Tail the syslog","text":"<pre><code>tail -f /var/log/syslog\n</code></pre>"},{"location":"commands/#look-at-the-parameters-in-the-config-file","title":"Look at the parameters in the config file","text":"<pre><code>nano /boot/syslinux.cfg-\n</code></pre>"},{"location":"commands/#create-a-backup-image-of-your-usb-and-store-it-on-disk1","title":"Create a backup image of your usb and store it on disk1","text":"<pre><code>dd if=/dev/sda of=/mnt/disk1/unraid.img\n</code></pre>"},{"location":"commands/#copy-files-using-midnight-commander","title":"Copy files using midnight commander","text":"<pre><code>mc\n</code></pre>"},{"location":"commands/#check-power-on-hours-for-all-drives","title":"Check power on hours for all drives","text":"<pre><code>for drive in $(ls -la /dev | grep -Ev 'sda|sd[a-z][0-9]' | grep sd[a-z] | awk '{print $10}'); do hours=$(smartctl --all /dev/${drive} | grep Power_On_Hours | awk '{print $10}'); echo \"Power on Hours for ${drive}: ${hours}\"; echo ''; done\n</code></pre>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/","title":"How to Put unRAID containers on their own VLAN inside a VPN Tunnel using PFSense","text":"<p>Credits:</p> <p>Written by Schwiing#3404</p> <p>Based on the work of IamSpartacus#3678</p> <p>Disclaimer: This guide makes the following assumptions:</p> <ul> <li> <p>You're using PFsense as your Firewall</p> </li> <li> <p>You're using unRAID</p> </li> <li> <p>You have a VPN Provider (In this example I used mullvad)</p> </li> <li> <p>You have a managed switch and know how to tag VLAN traffic on that switch (In this example I used unifi)</p> </li> </ul>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#create-openvpn-clients-in-pfsense","title":"Create OpenVPN Clients in PFSense","text":"<ol> <li> <p>Head to VPN -&gt; OpenVPN -&gt; Clients -&gt; + Add</p> </li> <li> <p>Fill out the client information based on your provider. I use mullvad, so I followed this guide: mullvad.net</p> </li> <li> <p>The only differences I made were:</p> <p>a. Set Server Host to: (a server closer to you  from this list)</p> <p>b. Make sure these are checked:</p> <ul> <li> <p>Bars the server from adding routed to the client's routing table</p> </li> <li> <p>Don't add or remove routes automatically</p> </li> </ul> </li> <li> <p>Mullvad supports up to 5 connections at once. So if you want to go down that route, add 5 clients</p> <p>a. Make sure to add a different server host for each client</p> </li> </ol>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#add-interface-assignments-for-each-openvpn-client","title":"Add interface assignments for each OpenVPN Client","text":"<ol> <li> <p>This is just a matter of creating an interface for each new ovpnc* you made earlier</p> </li> <li> <p>Interfaces -&gt; Assignments -&gt; + Add. I named them based on the server each interface would connect to</p> </li> <li> <p>For example, my first interface name is MULLVAD_CHICAGO_002 (same as the server it connects to)</p> </li> <li> <p>Create the rest of your interfaces (remember, up to 5)</p> </li> </ol>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#create-a-vlan","title":"Create a VLAN","text":"<ol> <li> <p>Interfaces -&gt; VLANs -&gt; + add</p> </li> <li> <p>Select your LAN as your parent interface (Physical NIC)</p> </li> <li> <p>Pick a VLAN Tag. Make sure you remember this for later. I picked \"90\", so my network is 192.168.90.0/24</p> </li> <li> <p>Add a description. I used \"DOCKER_VPN\"</p> </li> </ol>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#create-nat-mappings","title":"Create NAT Mappings","text":"<ol> <li> <p>Firewall -&gt; NAT -&gt; Outbound</p> </li> <li> <p>Make sure Outbound NAT Mode = Manual</p> </li> <li> <p>Add a rule to the top of the list with the following settings:</p> <ul> <li>Interface: MULLVAD_CHICAGO_002</li> <li>Protocol: Any</li> <li>Source: Network, 192.168.90.0/24 (Fill in whatever your VLAN Tag + Network is here)</li> </ul> </li> </ol>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#create-gateway-group","title":"Create Gateway Group","text":"<ol> <li> <p>System -&gt; Routing -&gt; Gateway Groups -&gt; + Add</p> </li> <li> <p>Set all of your new gateways to Tier 1</p> </li> <li> <p>Trigger Level: Packet Loss or High Latency</p> </li> <li> <p>Keep WAN_DHCP at \"Never\" Tier</p> </li> <li> <p>Name it. I called it \"Mullvad Gateway Group\"</p> </li> </ol>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#create-vlan-rule","title":"Create VLAN Rule","text":"<ol> <li> <p>Select your new VLAN (Mine is DOCKER_VPN)</p> </li> <li> <p>Top Rule:</p> <ul> <li>Action: Pass</li> <li>Interface: DOCKER_VPN</li> <li>Address Family: IPv4</li> <li>Source: DOCKER_VPN net</li> <li>Destination: LAN net</li> </ul> </li> <li> <p>Bottom Rule:</p> <ul> <li>Hit \"Display Advanced\" under Extra Options</li> <li>Action: Pass</li> <li>Interface: DOCKER_VPN</li> <li>Address Family: IPv4</li> <li>Source: DOCKER_VPN net</li> <li>Destination: any</li> <li>Gateway: Mullvad_VPN_Group</li> </ul> </li> </ol>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#add-dns-servers-to-vlan","title":"Add DNS Servers to VLAN","text":"<ol> <li> <p>Services -&gt; DHCP Server -&gt; DOCKER_VPN</p> </li> <li> <p>DNS Servers (these are for mullvad. YMMV):</p> <ul> <li>193.138.218.74</li> <li>10.8.0.1</li> </ul> </li> </ol>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#misc-pfsense-steps","title":"Misc PFsense Steps","text":"<ol> <li> <p>System -&gt; Advanced -&gt; Miscellaneous</p> </li> <li> <p>Gateway Monitoring: Do not create rules when gateway is down -&gt; CHECKED</p> </li> </ol>"},{"location":"docker/pfsense_vlan_vpn/pfsense_vlan_vpn/#unraid-steps","title":"unRAID steps","text":"<ol> <li> <p>Go to Network settings</p> <ul> <li>Enable VLANs: Yes</li> <li>VLAN Number: 90 (whatever you set your VLAN Tag earlier in Pfsense)</li> <li>Network Protocol: Ipv4 Only</li> <li>IPv4 Address: 192.168.90.31 (whatever you want here, under the same subnet)</li> <li>IPv4 default gateway: 192.168.90.1</li> </ul> </li> <li> <p>Next, Docker settings. Enable Docker: No, Advanced view: on</p> <ul> <li>Host Access to custom networks: Enabled</li> <li>Ipv4 custom network on interface br0.90:<ul> <li>Subnet: 192.168.90.0/24</li> <li>Gateway: 192.168.90.1</li> <li>DHCP Pool: 192.168.90.240/28 (16 hosts) [Set whatever you want here. 16 was plenty for me]</li> </ul> </li> </ul> </li> <li> <p>Once done, you now have a new VLAN in Unraid.</p> </li> <li> <p>Assign docker container new network. Set a static IP if it's easier for your Reverse Proxied containers</p> </li> </ol>"},{"location":"docker/plex/cloudflare/","title":"Routing Plex through Cloudflare","text":""},{"location":"docker/plex/cloudflare/#why","title":"Why","text":"<p>Routing Plex through the Cloudflare CDN can vastly improve your remote connection speeds to your server. Cloudflare acts as a middle man between your server and your different clients.</p> <p>Many experience bad peering between server and client even though the server has a good upload speed. This is because the client sometimes has to hop through all sorts of hoops if it's on a different ISP network. This can increase latency and lowered connection speeds.</p> <p>But by using Cloudflare as a middle man, both your server and the clients will (in most cases) have a great connection to Cloudflare.</p> <p>This will speed up the start times and scrolling of your streams and the general stability of the connection.</p> <p>Update February 1, 2020</p> <p>Cloudflare has updated their TOS with the following:</p> <p>Cloudflare TOS 2.8</p> <p>Use of the Service for serving video (unless purchased separately as a Paid Service) or a disproportionate percentage of pictures, audio files, or other non-HTML content, is prohibited.</p> <p>It previously only mentioned cached content. So if you plan on doing this, I would recommend setting up a separate account and domain if you already use Cloudflare.</p>"},{"location":"docker/plex/cloudflare/#reverse-proxy","title":"Reverse proxy","text":"<p>To get this working you need to reverse proxy Plex. This guide won't go into detail on how to do this. But I highly recommend this guide as a starting point. Let's Encrypt, Nginx &amp; Reverse Proxy Starter Guide - 2019 Edition</p> <p>The linuxserver/letsencrypt container comes with premade nginx configs that you can use. If you're stuck, just pop into the #reverse-proxy channel on our Discord and someone will help you </p> Nginx subdomain example plex.conf <pre><code>    server {\n    listen 443 ssl;\n    listen [::]:443 ssl;\n\n    server_name plex.*;\n\n    include /config/nginx/ssl.conf;\n\n    client_max_body_size 0;\n    proxy_redirect off;\n    proxy_buffering off;\n\n    location / {\n        include /config/nginx/proxy.conf;\n        proxy_pass http://HOSTIP:32400/;\n\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n\n        proxy_set_header X-Plex-Client-Identifier $http_x_plex_client_identifier;\n        proxy_set_header X-Plex-Device $http_x_plex_device;\n        proxy_set_header X-Plex-Device-Name $http_x_plex_device_name;\n        proxy_set_header X-Plex-Platform $http_x_plex_platform;\n        proxy_set_header X-Plex-Platform-Version $http_x_plex_platform_version;\n        proxy_set_header X-Plex-Product $http_x_plex_product;\n        proxy_set_header X-Plex-Token $http_x_plex_token;\n        proxy_set_header X-Plex-Version $http_x_plex_version;\n        proxy_set_header X-Plex-Nocache $http_x_plex_nocache;\n        proxy_set_header X-Plex-Provides $http_x_plex_provides;\n        proxy_set_header X-Plex-Device-Vendor $http_x_plex_device_vendor;\n        proxy_set_header X-Plex-Model $http_x_plex_model;\n    }\n}\n</code></pre> ssl.conf <pre><code>## Version 2020/01/07 - Changelog: https://github.com/linuxserver/docker-letsencrypt/commits/master/root/defaults/ssl.conf\n\n# session settings\nssl_session_timeout 1d;\nssl_session_cache shared:SSL:50m;\nssl_session_tickets off;\n\n# Diffie-Hellman parameter for DHE cipher suites\nssl_dhparam /config/nginx/dhparams.pem;\n\n# ssl certs\nssl_certificate /config/keys/letsencrypt/fullchain.pem;\nssl_certificate_key /config/keys/letsencrypt/privkey.pem;\n\n# protocols\n# using generated 2020-01-07, https://ssl-config.mozilla.org/#server=nginx&amp;server-version=1.16.1-r4&amp;config=intermediate&amp;openssl-version=1.1.1d-r3\nssl_protocols TLSv1.2 TLSv1.3;\nssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\nssl_prefer_server_ciphers off;\n\n# HSTS, remove # from the line below to enable HSTS\n#add_header Strict-Transport-Security \"max-age=63072000; includeSubDomains; preload\" always;\n\n# OCSP Stapling\nssl_stapling on;\nssl_stapling_verify on;\nresolver 127.0.0.11 valid=30s; # Docker DNS Server\n\n# Enable TLS 1.3 early data\nssl_early_data on;\n\n# Optional additional headers\n#add_header Content-Security-Policy \"upgrade-insecure-requests\";\n#add_header X-Frame-Options \"SAMEORIGIN\" always;\n#add_header X-XSS-Protection \"1; mode=block\" always;\n#add_header X-Content-Type-Options \"nosniff\" always;\n#add_header X-UA-Compatible \"IE=Edge\" always;\n#add_header Cache-Control \"no-transform\" always;\n#add_header Referrer-Policy \"same-origin\" always;\n</code></pre> proxy.conf <pre><code>## Version 2019/10/23 - Changelog: https://github.com/linuxserver/docker-letsencrypt/commits/master/root/defaults/proxy.conf\n\nclient_body_buffer_size 128k;\n\n#Timeout if the real server is dead\nproxy_next_upstream error timeout invalid_header http_500 http_502 http_503;\n\n# Advanced Proxy Config\nsend_timeout 5m;\nproxy_read_timeout 240;\nproxy_send_timeout 240;\nproxy_connect_timeout 240;\n\n# TLS 1.3 early data\nproxy_set_header Early-Data $ssl_early_data;\n\n# Basic Proxy Config\nproxy_set_header Host $host;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header X-Forwarded-Proto https;\nproxy_set_header X-Forwarded-Host $host;\nproxy_set_header X-Forwarded-Ssl on;\nproxy_redirect  http://  $scheme://;\nproxy_http_version 1.1;\nproxy_set_header Connection \"\";\n#proxy_cookie_path / \"/; HTTPOnly; Secure\"; # enable at your own risk, may break certain apps\nproxy_cache_bypass $cookie_session;\nproxy_no_cache $cookie_session;\nproxy_buffers 32 4k;\nproxy_headers_hash_bucket_size 128;\nproxy_headers_hash_max_size 1024;\n</code></pre>"},{"location":"docker/plex/cloudflare/#cloudflare","title":"Cloudflare","text":"<p>If you haven't already you need to add your domain to Cloudflare for this to work. See this guide on how to do that: Creating a Cloudflare account and adding a website</p> <p>In short you need to change your nameservers on your DNS provides page to the ones Cloudflare says. This might take some time depending on the DNS provider. Last time I did it I was using Namecheap and it took less then 10 minutes to propagate, so have some patience.</p> <p>After it's been transfered make sure the orange cloud is enabled. This is what activates the Cloudflare CDN on the domain.</p> <p></p>"},{"location":"docker/plex/cloudflare/#cache-rules","title":"Cache rules","text":"<p>This is very important that you do or else Cloudflare might ban your account for breaking the TOS on caching.</p> <p>Info</p> <p>See: 2.8 Limitation on Serving Non-HTML Content</p> <p>Go to the Page Rules menu and click on Create page rule You can have 3 page rules per domain.</p> <p>Add your domain with a wildcard at the end like so: <code>plex.domain.com/*</code> If you're using your root domain you do the same. <code>domain.com/*</code> or <code>domain.com/plex*</code></p> <p>If you want to add the rule on all subdomains you can do that so: <code>*.domain.com/</code></p> <p>Next select the Cache Level setting and set it to Bypass Then click Save and Deploy</p> <p></p>"},{"location":"docker/plex/cloudflare/#disable-ipv6","title":"Disable IPv6","text":"<p>There is currently a bug in Plex that it sees remote IPv6 adresses as local when reverse proxied. And as Cloudflare uses IPv6 we can disable that using the Cloudflare API. (It's not possible through the webUI)</p> <p>This bug won't affect performance, but any remote streams using IPv6 will show as local on the Plex dashboard and in Tautili. So this is more of an annoyance that we can easily fix.</p> <p>Below is the command you need to run for disabling IPv6.</p> <pre><code>    curl -X PATCH \"https://api.cloudflare.com/client/v4/zones/xxxxxxxxxxxxxxxxx/settings/ipv6\" \\\n    -H \"X-Auth-Email: xxxxxxx@email.com\" \\\n    -H \"X-Auth-Key: xxxxxxxxxxxxxxxxxxxxx\" \\\n    -H \"Content-Type: application/json\" \\\n    --data '{\"value\":\"off\"}'\n</code></pre> <p>In the API URL replace the x's with you Zone ID for you domain. You can find the zone ID on the Overview page at the bottom.</p> <p></p> <p>On the second line add your email account you used for Cloudflare and on the third line add your Global API key</p> <p>The Global API key can be found on your profile page and then API Tokens.</p> <p>Next just paste all the lines into the terminal and hit enter.</p> <p>If successful, the output will look like this:</p> <pre><code>    {\"result\":{\"id\":\"ipv6\",\"value\":\"off\",\"modified_on\":\"2020-01-21T20:52:11.121560Z\",\"editable\":true},\"success\":true,\"errors\":[],\"messages\":[]}\n</code></pre> <p>In the webui it should now say that IPv6 Compatibility is off. </p>"},{"location":"docker/plex/cloudflare/#plex","title":"Plex","text":""},{"location":"docker/plex/cloudflare/#custom-server-access-urls","title":"Custom server access URLs","text":"<p>After you've setup your reverse proxy for Plex and configured Cloudflare, go into your Plex settings and select Network. Then click on Show Advanced and scroll down to Custom server access URLs</p> <p>Add your domain you setup for plex with the port 443 after like so: <code>https://plexdomain.com:443</code> or <code>https://plexdomain.com:443/plex</code>and hit save.</p> <p></p> <p>At this point you do not need to have Remote Access enabled anymore.</p> <p>To test you can disable your Remote Access and try and stream something remotely.</p> <p>After a little while you should see on the Cloudflare Overview page that the Total Data Served have increased.</p> <p></p> <p>Happy streaming </p>"},{"location":"docker/telegraf/ipmi/","title":"Adding IPMI stats to the Telegraf container","text":""},{"location":"docker/telegraf/ipmi/#telegraf","title":"Telegraf","text":"<p>If we try and activate the ipmi_sensor plugin in the telegraf.conf file we will get an error in the log saying the following:</p> <p>Error</p> <p>2020-01-21T17:28:50Z E! [inputs.ipmi_sensor] Error in plugin: ipmitool not found: verify that ipmitool is installed and that ipmitool is in your PATH</p> <p>This happens because the telegraf container does not come with ipmitool installed.</p> <p>This can be easly fixed by just adding the following command in the post argument when creating the container:</p> <pre><code>    /bin/sh -c 'apk update &amp;&amp; apk add ipmitool &amp;&amp; telegraf'\n</code></pre> If you are using <code>telegraf</code>, rather than the default <code>telefraf:alpine</code> use the ubuntu variant of this command <pre><code>    /bin/sh -c 'apt update &amp;&amp; apt install -y ipmitool &amp;&amp; telegraf'\n</code></pre> <p>Edit the container and add the line in the Post Arguments: input field.</p> <p></p> <p>Next just click save and the container will be recreated with impitool installed.</p>"},{"location":"docker/telegraf/ipmi/#grafana","title":"Grafana","text":"<p>Below is two simple graph panels I made with Grafana.</p> <p>Create two graph panels in Grafana and copy the JSON below.</p> <p></p> IPMI Voltages panel JSON <pre><code>{\n\"datasource\": null,\n\"aliasColors\": {},\n\"bars\": false,\n\"cacheTimeout\": null,\n\"dashLength\": 10,\n\"dashes\": false,\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n    \"h\": 8,\n    \"w\": 16,\n    \"x\": 0,\n    \"y\": 0\n},\n\"hiddenSeries\": false,\n\"id\": 6,\n\"legend\": {\n    \"alignAsTable\": true,\n    \"avg\": false,\n    \"current\": true,\n    \"max\": false,\n    \"min\": false,\n    \"rightSide\": true,\n    \"show\": true,\n    \"sort\": \"current\",\n    \"sortDesc\": true,\n    \"total\": false,\n    \"values\": true\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"links\": [],\n\"nullPointMode\": \"connected\",\n\"options\": {\n    \"dataLinks\": []\n},\n\"percentage\": false,\n\"pluginVersion\": \"6.6.0-pre\",\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": false,\n\"steppedLine\": false,\n\"targets\": [\n    {\n    \"alias\": \"$tag_name\",\n    \"groupBy\": [\n        {\n        \"params\": [\n            \"$__interval\"\n        ],\n        \"type\": \"time\"\n        },\n        {\n        \"params\": [\n            \"name\"\n        ],\n        \"type\": \"tag\"\n        },\n        {\n        \"params\": [\n            \"host\"\n        ],\n        \"type\": \"tag\"\n        },\n        {\n        \"params\": [\n            \"unit\"\n        ],\n        \"type\": \"tag\"\n        },\n        {\n        \"params\": [\n            \"none\"\n        ],\n        \"type\": \"fill\"\n        }\n    ],\n    \"measurement\": \"ipmi_sensor\",\n    \"orderByTime\": \"ASC\",\n    \"policy\": \"default\",\n    \"refId\": \"A\",\n    \"resultFormat\": \"time_series\",\n    \"select\": [\n        [\n        {\n            \"params\": [\n            \"value\"\n            ],\n            \"type\": \"field\"\n        },\n        {\n            \"params\": [],\n            \"type\": \"mean\"\n        }\n        ]\n    ],\n    \"tags\": [\n        {\n        \"key\": \"unit\",\n        \"operator\": \"=\",\n        \"value\": \"volts\"\n        }\n    ]\n    }\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"IPMI Voltages\",\n\"tooltip\": {\n    \"shared\": true,\n    \"sort\": 0,\n    \"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n    \"buckets\": null,\n    \"mode\": \"time\",\n    \"name\": null,\n    \"show\": true,\n    \"values\": []\n},\n\"yaxes\": [\n    {\n    \"format\": \"volt\",\n    \"label\": null,\n    \"logBase\": 1,\n    \"max\": null,\n    \"min\": null,\n    \"show\": true\n    },\n    {\n    \"format\": \"short\",\n    \"label\": null,\n    \"logBase\": 1,\n    \"max\": null,\n    \"min\": null,\n    \"show\": true\n    }\n],\n\"yaxis\": {\n    \"align\": false,\n    \"alignLevel\": null\n}\n}\n</code></pre> IPMI Temperature panel JSON <pre><code>{\n\"datasource\": null,\n\"aliasColors\": {},\n\"bars\": false,\n\"cacheTimeout\": null,\n\"dashLength\": 10,\n\"dashes\": false,\n\"fill\": 1,\n\"fillGradient\": 0,\n\"gridPos\": {\n    \"h\": 8,\n    \"w\": 16,\n    \"x\": 0,\n    \"y\": 8\n},\n\"hiddenSeries\": false,\n\"id\": 8,\n\"legend\": {\n    \"alignAsTable\": true,\n    \"avg\": false,\n    \"current\": true,\n    \"max\": false,\n    \"min\": false,\n    \"rightSide\": true,\n    \"show\": true,\n    \"sort\": \"current\",\n    \"sortDesc\": true,\n    \"total\": false,\n    \"values\": true\n},\n\"lines\": true,\n\"linewidth\": 1,\n\"links\": [],\n\"nullPointMode\": \"connected\",\n\"options\": {\n    \"dataLinks\": []\n},\n\"percentage\": false,\n\"pluginVersion\": \"6.6.0-pre\",\n\"pointradius\": 2,\n\"points\": false,\n\"renderer\": \"flot\",\n\"seriesOverrides\": [],\n\"spaceLength\": 10,\n\"stack\": false,\n\"steppedLine\": false,\n\"targets\": [\n    {\n    \"alias\": \"$tag_name\",\n    \"groupBy\": [\n        {\n        \"params\": [\n            \"$__interval\"\n        ],\n        \"type\": \"time\"\n        },\n        {\n        \"params\": [\n            \"name\"\n        ],\n        \"type\": \"tag\"\n        },\n        {\n        \"params\": [\n            \"host\"\n        ],\n        \"type\": \"tag\"\n        },\n        {\n        \"params\": [\n            \"unit\"\n        ],\n        \"type\": \"tag\"\n        },\n        {\n        \"params\": [\n            \"none\"\n        ],\n        \"type\": \"fill\"\n        }\n    ],\n    \"measurement\": \"ipmi_sensor\",\n    \"orderByTime\": \"ASC\",\n    \"policy\": \"default\",\n    \"refId\": \"A\",\n    \"resultFormat\": \"time_series\",\n    \"select\": [\n        [\n        {\n            \"params\": [\n            \"value\"\n            ],\n            \"type\": \"field\"\n        },\n        {\n            \"params\": [],\n            \"type\": \"mean\"\n        }\n        ]\n    ],\n    \"tags\": [\n        {\n        \"key\": \"unit\",\n        \"operator\": \"=\",\n        \"value\": \"degrees_c\"\n        }\n    ]\n    }\n],\n\"thresholds\": [],\n\"timeFrom\": null,\n\"timeRegions\": [],\n\"timeShift\": null,\n\"title\": \"IPMI Temperatures\",\n\"tooltip\": {\n    \"shared\": true,\n    \"sort\": 0,\n    \"value_type\": \"individual\"\n},\n\"type\": \"graph\",\n\"xaxis\": {\n    \"buckets\": null,\n    \"mode\": \"time\",\n    \"name\": null,\n    \"show\": true,\n    \"values\": []\n},\n\"yaxes\": [\n    {\n    \"format\": \"celsius\",\n    \"label\": \"\",\n    \"logBase\": 1,\n    \"max\": null,\n    \"min\": null,\n    \"show\": true\n    },\n    {\n    \"format\": \"short\",\n    \"label\": null,\n    \"logBase\": 1,\n    \"max\": null,\n    \"min\": null,\n    \"show\": true\n    }\n],\n\"yaxis\": {\n    \"align\": false,\n    \"alignLevel\": null\n}\n}\n</code></pre>"},{"location":"docker/templating/templating/","title":"Writing a template compatible for Unraid","text":"<p>This is an effort to collect information from Squid's FAQ.</p>"},{"location":"docker/templating/templating/#prerequisites","title":"Prerequisites","text":""},{"location":"docker/templating/templating/#enabling-template-authoring-mode","title":"Enabling Template Authoring Mode","text":"<p>In order to have a smooth experience creating templates I highly recommend enabling <code>Template Authoring Mode</code>, it allows you to see the XML in clear-text and some other small neat tricks we might need to come back to.</p> <p>This process requires you to shut down the docker service for a short while, as Unraid doesn't let us change the setting with the service running. </p> <p>When the docker service is successfully shut down, enable advanced view. </p> <p>We can now enable authoring mode, you can also toggle the docker service back on. </p>"},{"location":"docker/templating/templating/#auto-generating-from-docker-image","title":"Auto-generating from Docker image","text":""},{"location":"docker/templating/templating/#1-search-from-docker-hub","title":"1. Search from Docker Hub","text":"Make sure you can retrieve search results from Docker Hub <p>In order to have Community Applications generate a template, we need to enable additional search from Docker Hub. You do this by opening CA, and press the settings button on the sidebar, and enabling additional search.  </p> <p>For this guide I will use <code>domistyle/idrac6</code> as an example. Go back to CA, and type the image you want to create a template for in the search bar (If you get a match now, chances are, it is already in CA) and press <code>Get More Results From Docker Hub</code>. </p> <p>Community Applications shows results for both the image-maintainer, and image-name. Which means that we will get similar results. Press the download to disk icon, and let Community Applications convert it. </p> <p>For this one Community Applications didn't do a very good job in converting it (It reads the Dockerfile for volumes, expose, publish etc.), however we can modify it with the template editor in Unraid. </p>"},{"location":"docker/templating/templating/#2-edit-the-template","title":"2. Edit the template","text":"<p>To see what we need to edit, we can most often refer to the readme of the container</p> <p>(Including a screenshot in case the readme changes) .</p> <p>Get to know the template editor, its very handy. Also for managing existing templates.</p> <p>I'm going through the rest of this guide with a mix of views (to remove clutter from images). If some of the settings you see in a screenshot isn't showing to you, enable advanced view. </p>"},{"location":"docker/templating/templating/#variables","title":"Variables","text":"<p>I will start with adding the variables, just because those are on the top of the documentation of this container.</p> <p>To add the <code>IDRAC_HOST</code> variable, we are going to press the <code>Add another Path, Port, Variable or Device</code> link. </p> <p>We need to change the Config Type to Variable, then we can start adding values. There is a lot going on here, but it is all going to make sense in the end.</p> <ul> <li> <p><code>Name</code> - The name for the variable, this is to help the user identifying what this variable does.</p> </li> <li> <p><code>Key</code> - This is the actual variable, so we are putting <code>IDRAC_HOST</code> here.</p> </li> <li> <p><code>Value</code> - We don't fill this, this is for the user.</p> </li> <li> <p><code>Default Value</code> - We could fill this, but since we can only do an estimated guess on what a users idrac host is, we   are going to skip it.</p> </li> <li> <p><code>Description</code> - Usually I don't fill this field with this long of a text, but the documentation of the container had a   good one, so I'm using it.</p> </li> <li> <p><code>Display</code> - This decides if the \"average user\" (someone that isn't using advanced view) is going to see this variable.</p> </li> <li> <p><code>Required</code> - I set this to yes because I know the container wont work without it set. The fact that the documentation   tells me its required also helped in the decision.</p> </li> <li> <p><code>Password Mask</code> - This isn't a password, so it doesn't need to have its value masked behind asterisk (*).</p> </li> </ul> <p></p> Here are some screenshots on how I added the other required variables <p> Here I set the Default value as root, since I know that's the default username on idrac</p> <p> Here I set the Default value as calvin, since I know that's the default password on idrac, I also enabled Password Mask</p>"},{"location":"docker/templating/templating/#volumes","title":"Volumes","text":"<p>Next is adding the volumes. We press the same <code>Add another Path, Port, Variable or Device</code> link, but we don't need to change the config type this time. The fields we can add here is mostly the same, but with the \"Volume\" type some of them are voided. Like password mask.</p> <p>If it's a \"proper\" appdata location, I set required to yes</p> <ul> <li><code>Access Mode</code> - Defines how the container should have access to this volume. Almost always <code>read/write</code></li> </ul> <p></p>"},{"location":"docker/templating/templating/#ports","title":"Ports","text":"<p>Now it is time for the ports. We press the same <code>Add another Path, Port, Variable or Device</code> link. This time we need to change the config type to <code>Port</code>.</p> <p>The documentation for this container says we can use port 5800 to access the interface, so that's the port we are going to add. It also mentions the VNC port, but most users wont need this.</p> <ul> <li><code>Connection Type</code> - Always <code>TCP</code>, unless specified otherwise.</li> </ul> <p></p>"},{"location":"docker/templating/templating/#metadata","title":"Metadata","text":"<p>Now you have a basic template. This might be enough for your own usage, but in order to add it to Community Applications we should add some spice to the template.</p> <p>As you can see there are lots of fields we can fill in with the template editor. </p> <p>I'm not going to walk you through this, but I am going to tell you how it ended up like it did.</p> <p>I changed the overview to match the intro from the readme of the container.</p> <p>I used the dropdown to set the categories as I saw fit.</p> <p>I set the support thread as the issue page of the project.</p> <p>!!! danger \"Do not do this if you are creating a template for your own container, create a support thread on the Unraid forums and use that link\"</p> <p>The project page is usually the GitHub link to the container.</p> <p>I have yet to change the Icon URL, because I need to create an icon.</p> <p><code>WebUI</code> Should be filled with the container port, Unraid should do the translation <code>http://[IP]:[PORT:5800]</code>. If this is an https enabled port, set the url to use https.</p> <p>For Post arguments and Extra Parameters, you should know if you need to fill this.</p> <p>There is more information on this in the Manual way part</p> <p></p>"},{"location":"docker/templating/templating/#3-grab-the-xml","title":"3. Grab the XML","text":"<p>Once you have filled all the fields, and set the ports, variables and volumes as good as you can, you can press the <code>Save</code> button, this takes you to a page where can see the xml in plain-text. Don't worry, it also saves the xml to your OS disk. Bellow is the XML generated by the procedure above.</p> Extracted XML <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;Container version=\"2\"&gt;\n    &lt;Name&gt;idrac6&lt;/Name&gt;\n    &lt;Repository&gt;domistyle/idrac6&lt;/Repository&gt;\n    &lt;Registry&gt;https://hub.docker.com/r/domistyle/idrac6/&lt;/Registry&gt;\n    &lt;Network&gt;bridge&lt;/Network&gt;\n    &lt;MyIP/&gt;\n    &lt;Shell&gt;sh&lt;/Shell&gt;\n    &lt;Privileged&gt;false&lt;/Privileged&gt;\n    &lt;Support&gt;https://github.com/DomiStyle/docker-idrac6/issues&lt;/Support&gt;\n    &lt;Project&gt;https://github.com/DomiStyle/docker-idrac6/&lt;/Project&gt;\n    &lt;Overview&gt;Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.&lt;/Overview&gt;\n    &lt;Category&gt;Tools: Network:Management&lt;/Category&gt;\n    &lt;WebUI&gt;http://[IP]:[PORT:5800]&lt;/WebUI&gt;\n    &lt;TemplateURL/&gt;\n    &lt;Icon&gt;/plugins/dynamix.docker.manager/images/question.png&lt;/Icon&gt;\n    &lt;ExtraParams/&gt;\n    &lt;PostArgs/&gt;\n    &lt;CPUset/&gt;\n    &lt;DateInstalled&gt;1579532295&lt;/DateInstalled&gt;\n    &lt;DonateText/&gt;\n    &lt;DonateLink/&gt;\n    &lt;Description&gt;Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.&lt;/Description&gt;\n    &lt;Networking&gt;\n        &lt;Mode&gt;bridge&lt;/Mode&gt;\n        &lt;Publish&gt;\n        &lt;Port&gt;\n            &lt;HostPort/&gt;\n            &lt;ContainerPort&gt;5800&lt;/ContainerPort&gt;\n            &lt;Protocol&gt;tcp&lt;/Protocol&gt;\n        &lt;/Port&gt;\n        &lt;/Publish&gt;\n    &lt;/Networking&gt;\n    &lt;Data&gt;\n        &lt;Volume&gt;\n        &lt;HostDir/&gt;\n        &lt;ContainerDir&gt;/vmedia&lt;/ContainerDir&gt;\n        &lt;Mode&gt;rw&lt;/Mode&gt;\n        &lt;/Volume&gt;\n        &lt;Volume&gt;\n        &lt;HostDir/&gt;\n        &lt;ContainerDir&gt;/app&lt;/ContainerDir&gt;\n        &lt;Mode&gt;rw&lt;/Mode&gt;\n        &lt;/Volume&gt;\n        &lt;Volume&gt;\n        &lt;HostDir/&gt;\n        &lt;ContainerDir&gt;/screenshots&lt;/ContainerDir&gt;\n        &lt;Mode&gt;rw&lt;/Mode&gt;\n        &lt;/Volume&gt;\n    &lt;/Data&gt;\n    &lt;Environment&gt;\n        &lt;Variable&gt;\n        &lt;Value/&gt;\n        &lt;Name&gt;IDRAC_HOST&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value/&gt;\n        &lt;Name&gt;IDRAC_USER&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value/&gt;\n        &lt;Name&gt;IDRAC_PASSWORD&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value/&gt;\n        &lt;Name&gt;IDRAC_PORT&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value&gt;false&lt;/Value&gt;\n        &lt;Name&gt;IDRAC_KEYCODE_HACK&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value&gt;99&lt;/Value&gt;\n        &lt;Name&gt;USER_ID&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value&gt;100&lt;/Value&gt;\n        &lt;Name&gt;GROUP_ID&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n    &lt;/Environment&gt;\n    &lt;Labels/&gt;\n    &lt;Config Name=\"idrac host\" Target=\"IDRAC_HOST\" Default=\"\" Mode=\"\" Description=\"Host for your iDRAC instance. Make sure your instance is reachable with https://&amp;amp;lt;IDRAC_HOST&amp;amp;gt;. See IDRAC_PORT for using custom ports. HTTPS is always used.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac user\" Target=\"IDRAC_USER\" Default=\"root\" Mode=\"\" Description=\"Username for your iDRAC instance.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac password\" Target=\"IDRAC_PASSWORD\" Default=\"calvin\" Mode=\"\" Description=\"Password for your iDRAC instance.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"true\"/&gt;\n    &lt;Config Name=\"WebUI\" Target=\"5800\" Default=\"5800\" Mode=\"tcp\" Description=\"web interface port\" Type=\"Port\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac port\" Target=\"IDRAC_PORT&amp;#9;\" Default=\"443\" Mode=\"\" Description=\"The optional port for the web interface.\" Type=\"Variable\" Display=\"advanced-hide\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"keyboard fix\" Target=\"IDRAC_KEYCODE_HACK\" Default=\"false|true\" Mode=\"\" Description=\"If you have issues with keyboard input, try setting this to true.\" Type=\"Variable\" Display=\"advanced-hide\" Required=\"false\" Mask=\"false\"&gt;false&lt;/Config&gt;\n    &lt;Config Name=\"PUID\" Target=\"USER_ID\" Default=\"\" Mode=\"\" Description=\"PUID\" Type=\"Variable\" Display=\"advanced\" Required=\"false\" Mask=\"false\"&gt;99&lt;/Config&gt;\n    &lt;Config Name=\"PGID\" Target=\"GROUP_ID\" Default=\"\" Mode=\"\" Description=\"PGID\" Type=\"Variable\" Display=\"advanced\" Required=\"false\" Mask=\"false\"&gt;100&lt;/Config&gt;\n    &lt;Config Name=\"Virtual media\" Target=\"/vmedia\" Default=\"/mnt/user/appdata/idrac/vmedia\" Mode=\"rw\" Description=\"Can be used to allow virtual media to be mounted.\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"Libraries\" Target=\"/app\" Default=\"/mnt/user/appdata/idrac/app\" Mode=\"rw\" Description=\"Libraries downloaded from your iDRAC instance will be stored here. Add a volume to cache those files for a faster container startup.\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"Screenshots\" Target=\"/screenshots\" Default=\"/mnt/user/appdata/idrac/screenshots\" Mode=\"rw\" Description=\"Container Path: /screenshots\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n&lt;/Container&gt;\n</code></pre>"},{"location":"docker/templating/templating/#4-clean-the-xml","title":"4. Clean the XML","text":"<p>Community Applications adds a lot of stuff that is not necessary for a template, but which Unraid uses to actually run and present the container.</p> <p>My first steps in removing unnecessary tags is to delete tags that are closed without value, like <code>&lt;MyIP/&gt;</code>.</p> XML after <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;Container version=\"2\"&gt;\n    &lt;Name&gt;idrac6&lt;/Name&gt;\n    &lt;Repository&gt;domistyle/idrac6&lt;/Repository&gt;\n    &lt;Registry&gt;https://hub.docker.com/r/domistyle/idrac6/&lt;/Registry&gt;\n    &lt;Network&gt;bridge&lt;/Network&gt;\n    &lt;Shell&gt;sh&lt;/Shell&gt;\n    &lt;Privileged&gt;false&lt;/Privileged&gt;\n    &lt;Support&gt;https://github.com/DomiStyle/docker-idrac6/issues&lt;/Support&gt;\n    &lt;Project&gt;https://github.com/DomiStyle/docker-idrac6/&lt;/Project&gt;\n    &lt;Overview&gt;Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.&lt;/Overview&gt;\n    &lt;Category&gt;Tools: Network:Management&lt;/Category&gt;\n    &lt;WebUI&gt;http://[IP]:[PORT:5800]&lt;/WebUI&gt;\n    &lt;Icon&gt;/plugins/dynamix.docker.manager/images/question.png&lt;/Icon&gt;\n    &lt;DateInstalled&gt;1579532295&lt;/DateInstalled&gt;\n    &lt;Description&gt;Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.&lt;/Description&gt;\n    &lt;Networking&gt;\n        &lt;Mode&gt;bridge&lt;/Mode&gt;\n        &lt;Publish&gt;\n        &lt;Port&gt;\n            &lt;HostPort/&gt;\n            &lt;ContainerPort&gt;5800&lt;/ContainerPort&gt;\n            &lt;Protocol&gt;tcp&lt;/Protocol&gt;\n        &lt;/Port&gt;\n        &lt;/Publish&gt;\n    &lt;/Networking&gt;\n    &lt;Data&gt;\n        &lt;Volume&gt;\n        &lt;HostDir/&gt;\n        &lt;ContainerDir&gt;/vmedia&lt;/ContainerDir&gt;\n        &lt;Mode&gt;rw&lt;/Mode&gt;\n        &lt;/Volume&gt;\n        &lt;Volume&gt;\n        &lt;HostDir/&gt;\n        &lt;ContainerDir&gt;/app&lt;/ContainerDir&gt;\n        &lt;Mode&gt;rw&lt;/Mode&gt;\n        &lt;/Volume&gt;\n        &lt;Volume&gt;\n        &lt;HostDir/&gt;\n        &lt;ContainerDir&gt;/screenshots&lt;/ContainerDir&gt;\n        &lt;Mode&gt;rw&lt;/Mode&gt;\n        &lt;/Volume&gt;\n    &lt;/Data&gt;\n    &lt;Environment&gt;\n        &lt;Variable&gt;\n        &lt;Value/&gt;\n        &lt;Name&gt;IDRAC_HOST&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value/&gt;\n        &lt;Name&gt;IDRAC_USER&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value/&gt;\n        &lt;Name&gt;IDRAC_PASSWORD&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value/&gt;\n        &lt;Name&gt;IDRAC_PORT&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value&gt;false&lt;/Value&gt;\n        &lt;Name&gt;IDRAC_KEYCODE_HACK&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value&gt;99&lt;/Value&gt;\n        &lt;Name&gt;USER_ID&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n        &lt;Variable&gt;\n        &lt;Value&gt;100&lt;/Value&gt;\n        &lt;Name&gt;GROUP_ID&lt;/Name&gt;\n        &lt;Mode/&gt;\n        &lt;/Variable&gt;\n    &lt;/Environment&gt;\n    &lt;Config Name=\"idrac host\" Target=\"IDRAC_HOST\" Default=\"\" Mode=\"\" Description=\"Host for your iDRAC instance. Make sure your instance is reachable with https://&amp;amp;lt;IDRAC_HOST&amp;amp;gt;. See IDRAC_PORT for using custom ports. HTTPS is always used.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac user\" Target=\"IDRAC_USER\" Default=\"root\" Mode=\"\" Description=\"Username for your iDRAC instance.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac password\" Target=\"IDRAC_PASSWORD\" Default=\"calvin\" Mode=\"\" Description=\"Password for your iDRAC instance.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"true\"/&gt;\n    &lt;Config Name=\"WebUI\" Target=\"5800\" Default=\"5800\" Mode=\"tcp\" Description=\"web interface port\" Type=\"Port\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac port\" Target=\"IDRAC_PORT&amp;#9;\" Default=\"443\" Mode=\"\" Description=\"The optional port for the web interface.\" Type=\"Variable\" Display=\"advanced-hide\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"keyboard fix\" Target=\"IDRAC_KEYCODE_HACK\" Default=\"false|true\" Mode=\"\" Description=\"If you have issues with keyboard input, try setting this to true.\" Type=\"Variable\" Display=\"advanced-hide\" Required=\"false\" Mask=\"false\"&gt;false&lt;/Config&gt;\n    &lt;Config Name=\"PUID\" Target=\"USER_ID\" Default=\"\" Mode=\"\" Description=\"PUID\" Type=\"Variable\" Display=\"advanced\" Required=\"false\" Mask=\"false\"&gt;99&lt;/Config&gt;\n    &lt;Config Name=\"PGID\" Target=\"GROUP_ID\" Default=\"\" Mode=\"\" Description=\"PGID\" Type=\"Variable\" Display=\"advanced\" Required=\"false\" Mask=\"false\"&gt;100&lt;/Config&gt;\n    &lt;Config Name=\"Virtual media\" Target=\"/vmedia\" Default=\"/mnt/user/appdata/idrac/vmedia\" Mode=\"rw\" Description=\"Can be used to allow virtual media to be mounted.\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"Libraries\" Target=\"/app\" Default=\"/mnt/user/appdata/idrac/app\" Mode=\"rw\" Description=\"Libraries downloaded from your iDRAC instance will be stored here. Add a volume to cache those files for a faster container startup.\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"Screenshots\" Target=\"/screenshots\" Default=\"/mnt/user/appdata/idrac/screenshots\" Mode=\"rw\" Description=\"Container Path: /screenshots\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n&lt;/Container&gt;\n</code></pre> <p>Since I prefer using just the <code>Config</code> tags, I also remove the tags <code>Networking</code>, <code>Data</code> and <code>Environment</code> together with it's content.</p> XML after <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;Container version=\"2\"&gt;\n    &lt;Name&gt;idrac6&lt;/Name&gt;\n    &lt;Repository&gt;domistyle/idrac6&lt;/Repository&gt;\n    &lt;Registry&gt;https://hub.docker.com/r/domistyle/idrac6/&lt;/Registry&gt;\n    &lt;Network&gt;bridge&lt;/Network&gt;\n    &lt;Shell&gt;sh&lt;/Shell&gt;\n    &lt;Privileged&gt;false&lt;/Privileged&gt;\n    &lt;Support&gt;https://github.com/DomiStyle/docker-idrac6/issues&lt;/Support&gt;\n    &lt;Project&gt;https://github.com/DomiStyle/docker-idrac6/&lt;/Project&gt;\n    &lt;Overview&gt;Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.&lt;/Overview&gt;\n    &lt;Category&gt;Tools: Network:Management&lt;/Category&gt;\n    &lt;WebUI&gt;http://[IP]:[PORT:5800]&lt;/WebUI&gt;\n    &lt;Icon&gt;/plugins/dynamix.docker.manager/images/question.png&lt;/Icon&gt;\n    &lt;DateInstalled&gt;1579532295&lt;/DateInstalled&gt;\n    &lt;Description&gt;Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.&lt;/Description&gt;\n    &lt;Config Name=\"idrac host\" Target=\"IDRAC_HOST\" Default=\"\" Mode=\"\" Description=\"Host for your iDRAC instance. Make sure your instance is reachable with https://&amp;amp;lt;IDRAC_HOST&amp;amp;gt;. See IDRAC_PORT for using custom ports. HTTPS is always used.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac user\" Target=\"IDRAC_USER\" Default=\"root\" Mode=\"\" Description=\"Username for your iDRAC instance.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac password\" Target=\"IDRAC_PASSWORD\" Default=\"calvin\" Mode=\"\" Description=\"Password for your iDRAC instance.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"true\"/&gt;\n    &lt;Config Name=\"WebUI\" Target=\"5800\" Default=\"5800\" Mode=\"tcp\" Description=\"web interface port\" Type=\"Port\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac port\" Target=\"IDRAC_PORT&amp;#9;\" Default=\"443\" Mode=\"\" Description=\"The optional port for the web interface.\" Type=\"Variable\" Display=\"advanced-hide\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"keyboard fix\" Target=\"IDRAC_KEYCODE_HACK\" Default=\"false|true\" Mode=\"\" Description=\"If you have issues with keyboard input, try setting this to true.\" Type=\"Variable\" Display=\"advanced-hide\" Required=\"false\" Mask=\"false\"&gt;false&lt;/Config&gt;\n    &lt;Config Name=\"PUID\" Target=\"USER_ID\" Default=\"\" Mode=\"\" Description=\"PUID\" Type=\"Variable\" Display=\"advanced\" Required=\"false\" Mask=\"false\"&gt;99&lt;/Config&gt;\n    &lt;Config Name=\"PGID\" Target=\"GROUP_ID\" Default=\"\" Mode=\"\" Description=\"PGID\" Type=\"Variable\" Display=\"advanced\" Required=\"false\" Mask=\"false\"&gt;100&lt;/Config&gt;\n    &lt;Config Name=\"Virtual media\" Target=\"/vmedia\" Default=\"/mnt/user/appdata/idrac/vmedia\" Mode=\"rw\" Description=\"Can be used to allow virtual media to be mounted.\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"Libraries\" Target=\"/app\" Default=\"/mnt/user/appdata/idrac/app\" Mode=\"rw\" Description=\"Libraries downloaded from your iDRAC instance will be stored here. Add a volume to cache those files for a faster container startup.\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"Screenshots\" Target=\"/screenshots\" Default=\"/mnt/user/appdata/idrac/screenshots\" Mode=\"rw\" Description=\"Container Path: /screenshots\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n&lt;/Container&gt;\n</code></pre> <p>Remove <code>DateInstalled</code>, since it's just used internally for Unraid.</p> <p>Unless you know what shell the container uses, also remove <code>Shell</code>.</p> What I consider a good XML, to base a PR on <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;Container version=\"2\"&gt;\n    &lt;Name&gt;idrac6&lt;/Name&gt;\n    &lt;Repository&gt;domistyle/idrac6&lt;/Repository&gt;\n    &lt;Registry&gt;https://hub.docker.com/r/domistyle/idrac6/&lt;/Registry&gt;\n    &lt;Network&gt;bridge&lt;/Network&gt;\n    &lt;Privileged&gt;false&lt;/Privileged&gt;\n    &lt;Support&gt;https://github.com/DomiStyle/docker-idrac6/issues&lt;/Support&gt;\n    &lt;Project&gt;https://github.com/DomiStyle/docker-idrac6/&lt;/Project&gt;\n    &lt;Overview&gt;Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.&lt;/Overview&gt;\n    &lt;Category&gt;Tools: Network:Management&lt;/Category&gt;\n    &lt;WebUI&gt;http://[IP]:[PORT:5800]&lt;/WebUI&gt;\n    &lt;Icon&gt;/plugins/dynamix.docker.manager/images/question.png&lt;/Icon&gt;\n    &lt;Description&gt;Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside of the container and access is provided via web interface or directly with VNC.&lt;/Description&gt;\n    &lt;Config Name=\"idrac host\" Target=\"IDRAC_HOST\" Default=\"\" Mode=\"\" Description=\"Host for your iDRAC instance. Make sure your instance is reachable with https://&amp;amp;lt;IDRAC_HOST&amp;amp;gt;. See IDRAC_PORT for using custom ports. HTTPS is always used.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac user\" Target=\"IDRAC_USER\" Default=\"root\" Mode=\"\" Description=\"Username for your iDRAC instance.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac password\" Target=\"IDRAC_PASSWORD\" Default=\"calvin\" Mode=\"\" Description=\"Password for your iDRAC instance.\" Type=\"Variable\" Display=\"always\" Required=\"true\" Mask=\"true\"/&gt;\n    &lt;Config Name=\"WebUI\" Target=\"5800\" Default=\"5800\" Mode=\"tcp\" Description=\"web interface port\" Type=\"Port\" Display=\"always\" Required=\"true\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"idrac port\" Target=\"IDRAC_PORT&amp;#9;\" Default=\"443\" Mode=\"\" Description=\"The optional port for the web interface.\" Type=\"Variable\" Display=\"advanced-hide\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"keyboard fix\" Target=\"IDRAC_KEYCODE_HACK\" Default=\"false|true\" Mode=\"\" Description=\"If you have issues with keyboard input, try setting this to true.\" Type=\"Variable\" Display=\"advanced-hide\" Required=\"false\" Mask=\"false\"&gt;false&lt;/Config&gt;\n    &lt;Config Name=\"PUID\" Target=\"USER_ID\" Default=\"\" Mode=\"\" Description=\"PUID\" Type=\"Variable\" Display=\"advanced\" Required=\"false\" Mask=\"false\"&gt;99&lt;/Config&gt;\n    &lt;Config Name=\"PGID\" Target=\"GROUP_ID\" Default=\"\" Mode=\"\" Description=\"PGID\" Type=\"Variable\" Display=\"advanced\" Required=\"false\" Mask=\"false\"&gt;100&lt;/Config&gt;\n    &lt;Config Name=\"Virtual media\" Target=\"/vmedia\" Default=\"/mnt/user/appdata/idrac/vmedia\" Mode=\"rw\" Description=\"Can be used to allow virtual media to be mounted.\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"Libraries\" Target=\"/app\" Default=\"/mnt/user/appdata/idrac/app\" Mode=\"rw\" Description=\"Libraries downloaded from your iDRAC instance will be stored here. Add a volume to cache those files for a faster container startup.\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n    &lt;Config Name=\"Screenshots\" Target=\"/screenshots\" Default=\"/mnt/user/appdata/idrac/screenshots\" Mode=\"rw\" Description=\"Container Path: /screenshots\" Type=\"Path\" Display=\"advanced\" Required=\"false\" Mask=\"false\"/&gt;\n&lt;/Container&gt;\n</code></pre> <p>More spice</p> <p>It's worth reading Add a Config Entry and XML Field Explanations to see if any of that applies to your template.</p>"},{"location":"docker/templating/templating/#manually-writing-a-template","title":"Manually writing a template","text":""},{"location":"docker/templating/templating/#1-starting-from-scratch","title":"1. Starting from \"scratch\"","text":"<p>To make sure we don't miss anything, we are going to start from a baseXML.</p> <p>I'm using the same example-container as above.</p> <p>Knowing the basics of XML is preferred</p> baseXML <pre><code>&lt;?xml version=\"1.0\"?&gt;\n    &lt;Container version=\"2\"&gt;\n    &lt;Name&gt;&lt;/Name&gt;\n    &lt;Repository&gt;&lt;/Repository&gt;\n    &lt;Registry&gt;&lt;/Registry&gt;\n    &lt;Network&gt;bridge&lt;/Network&gt;\n    &lt;Privileged&gt;false&lt;/Privileged&gt;\n    &lt;Support&gt;&lt;/Support&gt;\n    &lt;Project&gt;&lt;/Project&gt;\n    &lt;Overview&gt;&lt;/Overview&gt;\n    &lt;WebUI&gt;&lt;/WebUI&gt;\n    &lt;TemplateURL/&gt;\n    &lt;Icon&gt;/plugins/dynamix.docker.manager/images/question.png&lt;/Icon&gt;\n    &lt;ExtraParams/&gt;\n    &lt;PostArgs/&gt;\n    &lt;DonateText/&gt;\n    &lt;DonateLink/&gt;\n&lt;/Container&gt;\n</code></pre>"},{"location":"docker/templating/templating/#2-fill-the-base","title":"2. Fill the base","text":"<p>Since you are here browsing the \"hard\" way, I'm assuming you know some, if not most of the Docker terminology used going forward.</p> <p>Filling the baseXML above is pretty straight forward, however the tags expect the following:</p> <ul> <li> <p><code>Name</code> - The name for the container, preferably in lowercase.</p> </li> <li> <p><code>Repository</code> - The name of the image to pull from Docker Hub (other repositories work). e.g. <code>domistyle/idrac6</code></p> </li> <li> <p><code>Registry</code> - Link to the Docker Hub page for this container. e.g. <code>https://hub.docker.com/r/domistyle/idrac6/</code></p> </li> <li> <p><code>Support</code> - A link to a support thread on the Unraid forums for the container</p> </li> <li> <p><code>Project</code> - Link to the GitHub page (or the homepage of the project)   e.g. <code>https://github.com/DomiStyle/docker-idrac6/</code></p> </li> <li> <p><code>Overview</code> - Basic description of the project. e.g.</p> <p>Allows access to the iDRAC 6 console without installing Java or messing with Java Web Start. Java is only run inside   of the container and access is provided via web interface or directly with VNC.</p> </li> <li> <p><code>WebUI</code> - Which container-port a web UI might be on. e.g. <code>http://[IP]:[PORT:5800]</code> Unraid will translate this string   to the IP of the server, and the host-port set for container-port 5800</p> </li> <li> <p><code>Icon</code> URL to an icon, personally I prefer them in png. It has to be loaded over https.   e.g. <code>https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/chevereto.png</code> {:   style=\"height:1em\"}</p> </li> <li> <p><code>ExtraParams</code> - Parameters sent with the <code>docker run</code> command. e.g. <code>--restart unless-stopped</code></p> </li> <li> <p><code>PostArgs</code> - Command to run inside the container after start.   e.g. <code>/bin/sh -c 'apk update &amp;&amp; apk add ipmitool &amp;&amp; telegraf'</code> See valid example</p> </li> <li> <p><code>DonateText</code> - Text to show with the donate button.</p> </li> <li> <p><code>DonateLink</code> - URL for donations.</p> </li> <li> <p><code>Network</code> - Usually <code>bridge</code> if not specified by the image maintainer</p> </li> <li> <p><code>TemplateURL</code> - URL to the template. If it is a PR to our repo, set it   to <code>https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/&lt;container-name&gt;.xml</code> and   replace <code>&lt;container-name&gt;</code> with the actual name of the container (again, in lowercase).</p> </li> </ul> <p>Warning</p> <p>Has to be a raw link for GitHub.</p> <ul> <li><code>DonateImg</code> URL to donation image.</li> </ul>"},{"location":"docker/templating/templating/#3-add-a-config-entry","title":"3. Add a Config entry","text":"<p>There are two ways to achieve this, but I'm only going to focus on one of them. The syntax is like this:</p> <pre><code>&lt;Config Name=\"\" Target=\"\" Default=\"\" Mode=\"rw\" Description=\"\" Type=\"Path\" Display=\"always\" Required=\"false\"\n        Mask=\"false\"/&gt;\n</code></pre> <p>This syntax spans over all the 4 config types, some attributes changes meaning depending on the <code>Type</code>.</p>"},{"location":"docker/templating/templating/#add-a-volume","title":"Add a Volume","text":"<p>The volume specific values are:</p> <ul> <li> <p><code>Target</code> - The container path for the volume. e.g. <code>/config</code></p> </li> <li> <p><code>Mode</code> - What permissions to use for the volume.</p> <ul> <li><code>rw</code> as ReadWrite</li> <li><code>ro</code> as ReadOnly</li> <li>Slave options are also supported</li> </ul> </li> <li> <p><code>Type</code> - Always <code>Path</code>.</p> </li> </ul>"},{"location":"docker/templating/templating/#add-a-variable","title":"Add a Variable","text":"<ul> <li> <p><code>Target</code> - The variable. e.g. <code>IDRAC_HOST</code></p> </li> <li> <p><code>Type</code> - Always <code>Variable</code>.</p> </li> </ul>"},{"location":"docker/templating/templating/#add-a-port","title":"Add a Port","text":"<ul> <li> <p><code>Target</code> - The container port. e.g. <code>80</code></p> </li> <li> <p><code>Type</code> - Always <code>Port</code>.</p> </li> </ul>"},{"location":"docker/templating/templating/#shared-attributes","title":"Shared attributes","text":"<ul> <li> <p><code>Name</code> - The name that shows in the Unraid template manager. e.g. <code>Appdata</code>, <code>PUID</code>, <code>WebUI</code></p> </li> <li> <p><code>Description</code> - A more detailed description on this Config. e.g <code>Appdata location</code>, <code>PUID</code>, <code>WebUI</code></p> </li> <li> <p><code>Default</code> - Suggested value for the Config. e.g. <code>/mnt/user/appdata/idrac</code>, <code>99</code>, <code>8080</code></p> </li> <li> <p><code>Display</code> - How the volume is shown to the user.</p> <ul> <li><code>always</code> Always show the volume, can be edited and deleted in basic view.</li> <li><code>always-hide</code>  Always show the volume, cannot be edited and deleted in basic view.</li> <li><code>advanced</code> Shows when the user presses <code>Show more settings ...</code>, can be edited and deleted in basic view.</li> <li><code>advanced-hide</code> Shows when the user presses <code>Show more settings ...</code>, cannot be edited and deleted in basic   view.</li> </ul> </li> <li> <p><code>Required</code> If the user is able to continue without specifying the value. <code>true</code> or <code>false</code></p> </li> <li> <p><code>Mask</code> If the value should be masked behind asterisks, only really useful on variables. <code>true</code> or <code>false</code></p> </li> </ul>"},{"location":"docker/templating/templating/#tips-and-tricks","title":"Tips and Tricks","text":""},{"location":"docker/templating/templating/#limit-config-entry-to-predefined-values","title":"Limit Config entry to predefined values","text":"<p>For a Config field, instead of allowing users to type in a value, you can provide a dropdown list of options. In the <code>Default</code> attribute, list the available values separated by the pipe (<code>|</code>) character (e.g. <code>Default=\"true|false\"</code>). This is highly recommended for boolean values.</p>"},{"location":"docker/templating/templating/#categorization-tool","title":"Categorization tool","text":"<p>It's preferred to categorize your template, and recommended to use the \"Application Categorizer\" plugin to generate the appropriate tags. </p>"},{"location":"docker/templating/templating/#xml-field-explanations","title":"XML field explanations","text":"<p>This is an alphabetical, non-exhaustive list of the fields that can be provided in the <code>&lt;Container&gt;</code> section of the XML template (as of Unraid 6.10+), and what they do. For a full list, see the XML schema post.</p> <p>Please note that a number of these fields are optional, and you should only include them if they are relevant to your container.</p> <ul> <li> <p><code>Banner</code> - A URL to a banner image for the container. This should be a direct link to an image file, typically a PNG   file.</p> </li> <li> <p><code>Beta</code> - Gives the application a warning in Community Applications with the following   text <code>This application has been marked as being Beta. This does NOT neccessarily mean that there will be issues.</code>. Set   to either <code>true</code> or <code>false</code>.</p> </li> <li> <p><code>Branch</code> - Offer different versions of the container to the user. This corresponds to different tags on the Docker   image. For example, offer a <code>latest</code> branch and a <code>beta</code> branch, or a version of the container that uses different GPU   drivers.</p> Screenshot <p></p> </li> <li> <p><code>Tag</code> - The tag of the Docker image to use. It is typical to include at least a <code>latest</code> tag, but other tags can be   used as well.</p> </li> <li> <p><code>TagDescription</code> - A description of the tag. This is displayed to the user when they are installing the container.</p> </li> <li> <p><code>Category</code> - A list of categories that this template belongs to. Please use   the \"Application Categorizer\" plugin to generate the appropriate tags. Proper categories make   your template more discoverable in the Community Applications store.</p> </li> <li> <p><code>Changes</code> - A changelog for the template. This should be used for changes to the template, NOT changes to the   application itself. This is displayed in the Community Applications store entry.   This only supports Markdown,   not HTML.</p> Screenshot <p></p> </li> <li> <p><code>Config</code> - A configuration entry for the container. See the Add a Config section for more   information.</p> </li> <li> <p><code>Date</code> - The date this container was last updated. This is used internally by Unraid and should not be modified. Do   NOT include this in your template.</p> </li> <li> <p><code>DateInstalled</code> - The date that the container was installed. This is used internally by Unraid and should not be   modified. Do NOT include this in your template.</p> </li> <li> <p><code>Description</code> - Deprecated. Use <code>Overview</code> instead.</p> Screenshot <p></p> </li> <li> <p><code>DonateText</code> - Deprecated. This should be included in your Community Applications profile configuration instead.</p> </li> <li> <p><code>DonateLink</code> - Deprecated. This should be included in your Community Applications profile configuration instead.</p> </li> <li> <p><code>ExtraParams</code> - Additional parameters to pass to the <code>docker run</code> command when starting the container. This should   only be used for advanced configurations.</p> </li> <li> <p><code>ExtraSearchTerms</code> - A space-delimited list of   additional search terms   for the container. This can be used to help users find the container in the Community Applications store.</p> </li> <li> <p><code>Icon</code> - A URL to an icon for the container. This should be a direct link to an image file, typically a PNG file.</p> </li> <li> <p><code>License</code> - Information about   the license for the container.</p> </li> <li> <p><code>Maintainer</code> - Information about the maintainer of the template (you). This is displayed in the Community Applications   store entry.</p> </li> <li> <p><code>WebPage</code> - A link to your personal website or contact page.</p> </li> <li> <p><code>Name</code> - The name of the container. This is what the template will be called in the Community Applications store (   including search results).</p> </li> <li> <p><code>Network</code> - The networking mode for the container. This is often either <code>bridge</code> or <code>host</code>, but can also be the name   of a custom network.</p> </li> <li> <p><code>Overview</code> - A description of the container. This is displayed in the Community Applications store entry and when the   user is setting up the container. Include any important instructions or information here.</p> Screenshot <p> </p> </li> <li> <p><code>Privileged</code> - Whether the container should run in privileged mode. This can be a security risk and should be avoided   if possible.</p> </li> <li> <p><code>Project</code> - A link to the project's GitHub repository or other homepage.</p> </li> <li> <p><code>ReadMe</code> - A link to a README file for the container. This will be displayed in the context menu (left-click on the   container's icon) in the Docker tab.</p> </li> <li> <p><code>Registry</code> - A link to the registry where the Docker image is located. This is often a link to the Docker Hub page for   the image.</p> </li> <li> <p><code>Repository</code> - A link to the repository where the Docker image can be downloaded from, in the   pattern <code>registry/author/app_name:tag_name</code>. For example, <code>author/app_name</code> (defaults to Docker Hub and <code>latest</code> tag),   or <code>ghcr.io/author/app_name:preview</code> (a <code>preview</code>-tagged image from the GitHub Container Registry).</p> </li> <li> <p><code>Requires</code> - A warning message informing users of any prerequisites or requirements. This will be displayed:</p> <ul> <li>in the \"Additional Requirements\" section of the app's Community Applications store entry</li> </ul> Screenshot <p></p> <ul> <li>in a pop-up when the user clicks \"Install\" in the Community Applications store</li> </ul> Screenshot <p></p> <ul> <li>in \"Additional Requirements\" on the container's settings page in Unraid</li> </ul> Screenshot <p></p> </li> <li> <p><code>Screenshot</code> - A link to an image   to display in the Community Applications store entry.   This should be a direct link to an image file, typically a PNG file. You can include multiple screenshots by adding   multiple <code>&lt;Screenshot&gt;</code> tags.</p> Screenshot <p></p> </li> <li> <p><code>Shell</code> - The shell to use when running commands in the container. This is typically <code>sh</code> or <code>bash</code>. Do NOT include   if you are unsure, as it can cause issues with the container.</p> </li> <li> <p><code>Support</code> - A link to a support thread on the Unraid forums   for the container. This will be mapped to the \"Support\" button on the Community Applications store entry.</p> </li> <li> <p><code>TemplateURL</code> - A link to the raw XML file for the template hosted on GitHub. This should start   with <code>https://raw.githubusercontent.com/</code>.</p> </li> <li> <p><code>WebUI</code> - A pattern of the URL to access the web interface of the container, typically in the   pattern <code>http://[IP]:[PORT:5000]</code>. When provided, a \"WebUI\" option will be available in the context menu (left-click   on the container's icon) in the Docker tab.</p> Screenshot <p></p> </li> <li> <p><code>Video</code> - A link to a video about the container. This will be displayed in the Community Applications store entry.</p> Screenshot <p></p> </li> </ul>"},{"location":"testing/highlighting_test/","title":"Highlight test","text":"<p>https://squidfunk.github.io/mkdocs-material/extensions/admonition/</p> <p>HELLO Highlight</p> <p>Warning</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"testing/highlighting_test/#nginx","title":"nginx","text":"<pre><code># make sure that your dns has a cname set for code-server\n\nserver {\n    listen 443 ssl;\n    listen [::]:443 ssl;\n\n    server_name code-server.*;\n\n    include /config/nginx/ssl.conf;\n\n    client_max_body_size 0;\n\n    # enable for ldap auth, fill in ldap details in ldap.conf\n    #include /config/nginx/ldap.conf;\n\n    location / {\n        # enable the next two lines for http auth\n        #auth_basic \"Restricted\";\n        #auth_basic_user_file /config/nginx/.htpasswd;\n\n        # enable the next two lines for ldap auth\n        #auth_request /auth;\n        #error_page 401 =200 /login;\n\n        include /config/nginx/proxy.conf;\n        resolver 127.0.0.11 valid=30s;\n        set $upstream_code_server code-server;\n        proxy_pass http://$upstream_code_server:8443;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection upgrade;\n    }\n}\n</code></pre>"},{"location":"testing/highlighting_test/#python","title":"python","text":"<pre><code>print(\"Unraid rulez\")\n</code></pre>"},{"location":"testing/highlighting_test/#bash","title":"bash","text":"<pre><code>#!/bin/bash\necho \"Hello world!\"\n</code></pre>"},{"location":"tips/discord_notifications/discord_notifications/","title":"Discord Notifications","text":""},{"location":"tips/discord_notifications/discord_notifications/#creating-the-discord-webhook","title":"Creating the Discord webhook","text":"<ol> <li> <p>Head over to your Discord server and  click on Server Settings then Webhooks and Create Webhooks Give it a name and choose the channel you want it to send notifications to.</p> </li> <li> <p>Copy the Webhook URL and click save.</p> </li> </ol> <p> </p>"},{"location":"tips/discord_notifications/discord_notifications/#adding-the-webhook","title":"Adding the webhook","text":"<p>As Unraid doesn't officially support Discord notifications we have to use the Slack agent.</p> <ol> <li> <p>Go to the Unraid settings page and click on Notifications Make sure that system notifications are enabled and select the different types of notifications you want in the Agents list.</p> </li> <li> <p>Scroll down to the Slack agent, enable the agent, paste your webhook URL and give it a name. (The name you add here will override the name you gave it in the Discord settings) At the end of your webhook URL add /slack so the URL looks like this: <code>https://discordapp.com/api/webhooks/40832456738934/7DcEpWr5V24OIEIELjg-KkHky86SrOgTqA/slack</code></p> </li> <li>To test the connection you can just click the Test button.</li> </ol> <p>Note</p> <p>There are some limitations on what the different notifications titles and messages can be. I have found that notifications title <code>Subject</code> and notifications message <code>Event</code> works just fine. If you add any more it will probably not send any notifications.</p> <p> </p>"}]}